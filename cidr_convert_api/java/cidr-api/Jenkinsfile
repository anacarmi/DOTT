pipeline {
	agent any
	environment { 
      		SONAR_TOKEN = credentials("MySCSecretFile") 
   	}
		stages {
			stage('Build') {
				steps {
					dir("cidr_convert_api/java/cidr-api") {
						script { 
							sh 'pwd'
							sh 'mvn clean package'
						}
					}	
				}
			} 

			stage('Code Analysis: SonarCloud') {
				steps {
					dir("cidr_convert_api/java/cidr-api/") {
					sh 'pwd'
				        sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar' } 
				}
			}
			
			stage('Code Analysis: Linting') {
				steps {
					dir("cidr_convert_api/java/cidr-api/") {
				        sh 'mvn pmd:pmd' }
					dir("cidr_convert_api/java/cidr-api/target") {
					sh 'cat pmd.xml'
					}
				}
			}
			
			stage('Testing') {
				steps {
					dir("cidr_convert_api/java/cidr-api/") 
						{ sh 'mvn clean test'}
					
					script {
						try {
							junit 'target/surefire-reports/TEST-*.xml'	
   						} catch (Exception e) {
      							echo 'Exception occurred: ' + e.toString()
  						}
					}
				}
			}
			
			stage('Docker') {
				steps {
					sh 'echo "next stage"'
				}
			}
		}
}
 
